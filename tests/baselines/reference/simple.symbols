=== tests/cases/conformance/types/nonNull/simple.ts ===
let a: string | undefined | null | never;
>a : Symbol(a, Decl(simple.ts, 0, 3))

let b: typeof a!;
>b : Symbol(b, Decl(simple.ts, 1, 3))
>a : Symbol(a, Decl(simple.ts, 0, 3))

type Assert<T> = T!;
>Assert : Symbol(Assert, Decl(simple.ts, 1, 17))
>T : Symbol(T, Decl(simple.ts, 2, 12))
>T : Symbol(T, Decl(simple.ts, 2, 12))

let c: Assert<typeof a>;
>c : Symbol(c, Decl(simple.ts, 3, 3))
>Assert : Symbol(Assert, Decl(simple.ts, 1, 17))
>a : Symbol(a, Decl(simple.ts, 0, 3))

